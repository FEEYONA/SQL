# Link to project: https://discuss.codecademy.com/t/data-science-independent-project-2-explore-a-sample-database/419945

#### BASIC REQUIREMENTS

## Which tracks appeared in the most playlists? how many playlist did they appear in?
SELECT tracks.Name, COUNT(playlist_track.PlaylistId) AS 'Number of playlists appeared in'
FROM playlist_track
	LEFT JOIN tracks
	ON playlist_track.TrackId = tracks.TrackId
GROUP BY playlist_track.TrackId
ORDER BY 2 DESC
LIMIT 50;

## Which track generated the most revenue? 
SELECT tracks.Name, sum(invoice_items.UnitPrice) AS 'Revenue generated'
FROM invoice_items
	JOIN tracks
	ON tracks.TrackId = invoice_items.TrackId
GROUP BY invoice_items.TrackId
ORDER BY 2 DESC
LIMIT 10;

## Which album generated the most revenue? 
SELECT albums.Title, sum(tracks.UnitPrice) AS 'Revenue generated'
FROM tracks
	JOIN albums
	ON albums.AlbumId = tracks.AlbumId
GROUP BY tracks.AlbumId
ORDER BY 2 DESC
LIMIT 10;

## Which genre generated the most revenue?
SELECT genres.Name, sum(tracks.UnitPrice) AS 'Revenue generated'
FROM tracks
	JOIN genres
	ON genres.GenreId = tracks.GenreId
GROUP BY tracks.GenreId
ORDER BY 2 DESC
LIMIT 10;

## Which countries have the highest sales revenue?
SELECT BillingCountry, SUM(Total) AS 'Sales revenue'
FROM invoices
GROUP BY BillingCountry
ORDER BY 2 DESC
LIMIT 10;

## What percent of total revenue does each country make up?
SELECT BillingCountry,
ROUND((SUM(Total)/(SELECT SUM(Total) FROM invoices))*100, 3) AS 'Percent of Total Revenue'
FROM invoices
GROUP BY BillingCountry
ORDER BY 2 DESC
LIMIT 10;

## How many customers did each employee support?
SELECT employees.FirstName, employees.LastName,
	employees.Title, COUNT(*)
FROM customers
	LEFT JOIN employees
	ON customers.SupportRepId = employees.EmployeeId
GROUP BY customers.SupportRepId
ORDER BY 4 DESC;

## What is the average revenue for each sale, and what is their total sale?
SELECT AVG(Total) as 'Average revenue per sale',
	SUM(Total) as 'Total sale'
FROM invoices

## Do longer or shorter length albums tend to generate more revenue?
WITH album_length AS (
	SELECT albums.AlbumId, albums.Title, 
	SUM(Milliseconds)/1000/60 AS 'album_length_in_minutes'
	FROM tracks
	JOIN albums
	ON albums.AlbumId = tracks.AlbumId
	GROUP BY albums.AlbumId
	)
SELECT tracks.AlbumId, album_length.Title,
	album_length.album_length_in_minutes,
	SUM(invoice_items.UnitPrice) AS 'Album_revenue'
FROM album_length
JOIN tracks
ON tracks.AlbumId = album_length.AlbumId
JOIN invoice_items
ON tracks.TrackId = invoice_items.TrackId
GROUP BY tracks.AlbumId
ORDER BY Album_revenue DESC
LIMIT 30
